{ config, user, config-domain, ... }@args: with args.config-utils; { # (Setup Module)

  # Plasma: A Desktop Environment focused on customization
  config.modules."plasma+panels.personal" = {
    tags = config.modules."plasma.personal".tags;
    attr = rec {
      default-widgets = config.modules."plasma+panels".attr.widgets;
      default-mainPanel = config.modules."plasma+panels".attr.mainPanel;
      widgets = {

        # Bar of apps
        taskManager = (default-widgets.taskManager // {
          config = {
            "General" = (default-widgets.taskManager.config."General" // {
              "launchers" = (utils.joinStr "," [ # Pinned apps
                "applications:org.kde.dolphin.desktop" # Dolphin
                "applications:firefox.desktop" # Firefox
                "applications:firefox-devedition.desktop" # Firefox-Dev
              ]);
            });
          };
        });

        # Color Picker
        colorPicker = {
          name = "org.kde.plasma.colorpicker";
          config = {
            "General" = {
              "defaultFormat" = "RRGGBB";
            };
          };
        };

        # System tray
        systemTray = (default-widgets.systemTray // {
          systemTray.items = (default-widgets.systemTray.systemTray.items // {
            shown = [
              "org.kde.plasma.vault" # Plasma Vault
              "org.kde.plasma.mediacontroller" # Media Controller
            ];
            hidden = (
              default-widgets.systemTray.systemTray.items.hidden ++ [
                "Yakuake" # Yakuake
                "chrome_status_icon_1" # Kando
                # TODO: (Kando) Watchout for the widget. The name might change!
                "org.kde.plasma.volume" # System volume
                "org.kde.plasma.networkmanagement" # Network status
              ]
            );
          });
        });

        # Show grid
        showGrid = {
          name = "org.kde.plasma.icon";
          config = {
            "localPath" = "/home/${user.username}/.local/share/plasma_icons/ShowGrid.desktop";
            # Note: This is within Setup! There is no "config.xdg.dataHome" here!
          };
        };

        # Toggle Yakuake
        toggleYakuake = {
          name = "org.kde.plasma.icon";
          config = {
            "localPath" = "/home/${user.username}/.local/share/plasma_icons/ToggleYakuake.desktop";
            # Note: This is within Setup! There is no "config.xdg.dataHome" here!
          };
        };

      };
      tiledmenu = with config-domain; (
        # Check for "./private-config/programs"
        utils.mkIfElse (utils.pathExists private.programs) (
          with config.modules."plasma-tiledmenu.personal"; (attr.tiledmenu attr.apps attr.gridModel)
        ) (
          with config.modules."plasma-tiledmenu"; (attr.tiledmenu attr.apps attr.gridModel) # Default
        )
      );
      mainPanel = (default-mainPanel // {
        widgets = [
          tiledmenu
          default-widgets.activityPager
          widgets.taskManager
          default-widgets.separator
          "org.kde.plasma.volume"
          "org.kde.plasma.networkmanagement"
          default-widgets.clock
          default-widgets.showDesktop
        ];
      });
      helperPanel = (default-mainPanel // {
        height = 24; # Smaller
        widgets = [
          default-widgets.virtualDesktopsPager
          widgets.showGrid
          default-widgets.separator
          widgets.toggleYakuake
          default-widgets.spacer
          widgets.colorPicker
          widgets.systemTray
        ];
      });
    };
    setup = { attr }: {
      home = { # (Home-Manager Module)

        # Panels
        config.programs.plasma.panels = [# (plasma-manager option)
          attr.mainPanel # Main panel
          attr.helperPanel # Helper panel
        ];

        # Grid view
        config.xdg.dataFile."plasma_icons/ShowGrid.desktop" = {
          text = (
            let
              showGridCommand = "qdbus org.kde.kglobalaccel /component/kwin org.kde.kglobalaccel.Component.invokeShortcut 'Grid View'";
            in ''
              [Desktop Entry]
              Name=Show Grid
              Name[pt_BR]=Mostrar grade
              GenericName=
              GenericName[pt_BR]=
              Icon=show-grid
              Exec=${showGridCommand}
              Comment=
              Comment[pt_BR]=
              MimeType=
              Path=
              StartupNotify=true
              Terminal=false
              TerminalOptions=
              Type=Application
              X-KDE-SubstituteUID=false
              X-KDE-Username=
            '' # Note: As generated by Plasma
          );
          executable = true;
        };

        # Toggle Yakuake
        config.xdg.dataFile."plasma_icons/ToggleYakuake.desktop" = {
          text = (
            let
              toggleYakuakeCommand = "yakuake";
            in ''
              [Desktop Entry]
              Name=Yakuake
              Icon=yakuake
              Exec=${toggleYakuakeCommand}
              Terminal=false
              Type=Application
            ''
          );
          executable = true;
        };

      };
    };
  };

  # Decrease the height of the total work-area
  config.hardware.configuration.screenSize.verticalBars = [ # (From "configurations/screen-size.nix")
    (utils.mkIf (config.includedModules."plasma+panels") (
      with config.modules."plasma+panels"; (
        -attr.mainPanel.height # Subtracts default panel height
      )
    ))
    (utils.mkIf (config.includedModules."plasma+panels.personal") (
      with config.modules."plasma+panels.personal"; (
        attr.mainPanel.height + attr.helperPanel.height # Adds custom panel height
      )
    ))
  ];

}
